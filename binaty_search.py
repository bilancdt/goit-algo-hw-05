def binary_search(arr, target):
    low, high = 0, len(arr) - 1
    iterations = 0
    upper_bound = None
    
    while low <= high:
        iterations += 1
        mid = (low + high) // 2
        
        if arr[mid] == target:
            return (iterations, arr[mid])  # Знайшли точний елемент
        
        elif arr[mid] < target:
            low = mid + 1
        else:
            upper_bound = arr[mid]  # Оновлюємо верхню межу
            high = mid - 1
    
    # Якщо не знайдено точний елемент, повертаємо кількість ітерацій і верхню межу
    return (iterations, upper_bound)

# Тестуємо функцію
sorted_array = [1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9]
target = 4.5
result = binary_search(sorted_array, target)
print(f"Кількість ітерацій: {result[0]}, Верхня межа: {result[1]}")

#Якщо поточний середній елемент arr[mid] менший за target, ми пересуваємо межу пошуку (low).
#Якщо поточний середній елемент більший, оновлюємо верхню межу (upper_bound) і пересуваємо праву межу (high).
#Під час пошуку рахуємо кількість ітерацій і, якщо знайдено точний елемент, повертаємо його.
#Якщо не знайдено точного елемента, повертаємо кількість ітерацій і найближчу верхню межу.

#Якщо точне значення є в масиві, воно повертається як верхня межа.
#Якщо елемент не знайдено, повертається найближчий більший або рівний елемент.
